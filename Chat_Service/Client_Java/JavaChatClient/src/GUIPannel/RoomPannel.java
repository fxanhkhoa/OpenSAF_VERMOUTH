/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUIPannel;

import java.awt.event.KeyEvent;
import java.util.HashSet;
import javachatclient.GlobalStatic;
import javachatclient.Struct.OnlineUserRenderer;
import javachatclient.Struct.UserStruct;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author ubuntu
 */
public class RoomPannel extends javax.swing.JPanel {

    /**
     * Creates new form RoomPannel
     */
    
    /**/
    private DefaultListModel listModel;
    private String sUser;
     
    private boolean checkUser=true;
    
    public int IDROOM;
    public String Name;
    public int status;
    public int isOwner = 0;
    public int indexOfTab;
        
    public HashSet<UserStruct> userRoomList = new HashSet<UserStruct>();
     /**
     * End line
     */
    
    public RoomPannel(String Name, int IDROOM, int status) {
        initComponents();
        txtContent.setEditable(false);
        this.Name = Name;
        this.IDROOM = IDROOM;
        this.status = status;
        lbRoomName.setText(Name);
        
        /**/
        btnAddUser.setEnabled(false);
        btnKickUser.setEnabled(false);
        btnTerminate.setEnabled(false);
        
         /**/
        listUser.setModel(new DefaultListModel());
        listModel = new DefaultListModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbRoomName = new javax.swing.JLabel();
        lbHostName = new javax.swing.JLabel();
        btnAddUser = new javax.swing.JButton();
        btnKickUser = new javax.swing.JButton();
        txtChat = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listUser = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtContent = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        btnTerminate = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();

        lbRoomName.setText("ROOM");

        lbHostName.setText("HOST");

        btnAddUser.setText("AddUser");
        btnAddUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddUserActionPerformed(evt);
            }
        });

        btnKickUser.setText("KickUser");
        btnKickUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKickUserActionPerformed(evt);
            }
        });

        txtChat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtChatActionPerformed(evt);
            }
        });
        txtChat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtChatKeyPressed(evt);
            }
        });

        jLabel1.setText("List");

        jScrollPane2.setViewportView(listUser);

        txtContent.setColumns(20);
        txtContent.setRows(5);
        jScrollPane1.setViewportView(txtContent);

        jLabel3.setText("ROOM ID");

        btnTerminate.setText("Terminate");
        btnTerminate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTerminateActionPerformed(evt);
            }
        });

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbHostName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(268, 268, 268))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnAddUser)
                                    .addComponent(btnKickUser))
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnTerminate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnRefresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addComponent(jLabel1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtChat, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(58, 58, 58)
                                .addComponent(lbRoomName, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(54, 54, 54))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbHostName)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbRoomName, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel3)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAddUser)
                            .addComponent(btnTerminate))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnKickUser)
                            .addComponent(btnRefresh))
                        .addGap(16, 16, 16)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtChat, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void AddChatMess(String User, String Mess){
        if (!GlobalStatic.myUserName.equals(User)){
            txtContent.append(User + ": " + Mess + "\n");
            txtContent.setCaretPosition(txtContent.getDocument().getLength());
        }
    }
    
    public void RefreshClick(){
        btnRefresh.doClick();
    }
    
    public void SetButton()
    {
        if(this.isOwner == 0)
        {
            try {
                btnAddUser.setEnabled(false);
                btnKickUser.setEnabled(false);
                btnTerminate.setEnabled(false);
                
            } catch (Exception e) {
            }
        }
        else
        {
            try {
                btnAddUser.setEnabled(true);
                btnKickUser.setEnabled(true);
                btnTerminate.setEnabled(true);
                
            } catch (Exception e) {
            }
        }
    }
    
    public void ReloadList(){
        System.out.println("GUIPannel.RoomPannel.ReloadList() 1");
        listModel.removeAllElements();
        System.out.println("GUIPannel.RoomPannel.ReloadList() 2");
        for (UserStruct uS: userRoomList){
            try {
                System.out.println("i day:" + uS.userName);
                //System.err.println(sP.onlineUser.elementAt(k).userName);
                listModel.addElement(uS);
                
            } catch (Exception e) {

                System.out.println("GUIPannel.RoomPannel.ReloadList()"+ e);

            }
        }
        
            if(true)
            {
                listUser.setModel(listModel);
            }
                            
        //Now render Jlist
        listUser.setCellRenderer(new OnlineUserRenderer());
    }
    
    public void ClearUserList(){
        userRoomList.clear();
        
    }
    
    public int AddToList(String userName){

        for (UserStruct uS: userRoomList){
            if (uS.userName.equals(userName)){
                try {
                    ReloadList();
                } catch (Exception e) {
                }
                
                return 1;
            }
        }
        this.userRoomList.add(new UserStruct(userName, 1));
        System.out.println("ADDED one new man to room" + userName);
        try{
            ReloadList();
        } catch (Exception e){
            
        }

        return 1;
    }
    
    public int RemoveFromList(String userName){
        for (UserStruct uS: userRoomList){
            if (uS.userName.equals(userName)){
                userRoomList.remove(uS);
                ReloadList();
                return 1;
            }
        }
        
        return 1;
    }
    
    private void btnAddUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddUserActionPerformed
        // TODO add your handling code here:

        int mc = JOptionPane.INFORMATION_MESSAGE;
        sUser = JOptionPane.showInputDialog (null, "Type User", "Add USer to Private Chat", mc);
        GlobalStatic.clientThread.AddFriendToRoom(this.IDROOM,sUser); //sUser
        
        System.err.println("INVITED MR/MRS  "+sUser+ "INTO ROOM ID "+ IDROOM);
    }//GEN-LAST:event_btnAddUserActionPerformed

    private void btnKickUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKickUserActionPerformed
        // TODO add your handling code here:
        int mc = JOptionPane.INFORMATION_MESSAGE;
        sUser = JOptionPane.showInputDialog (null, "Type User", "Kick User ", mc);
        System.out.println("IDROOM WHEN KICK:" + this.IDROOM);
        GlobalStatic.clientThread.RemoveFriendFromRoom(sUser, IDROOM, "");

    }//GEN-LAST:event_btnKickUserActionPerformed

    private void txtChatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtChatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtChatActionPerformed

    private void txtChatKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtChatKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            System.out.println("ID KHI SEND: " + this.IDROOM);
            txtContent.append(txtChat.getText() + "\n");
            txtContent.setCaretPosition(txtContent.getDocument().getLength());
            GlobalStatic.clientThread.SendMsgToRoom(this.IDROOM,txtChat.getText());
            txtChat.setText("");

        }

    }//GEN-LAST:event_txtChatKeyPressed

    private void btnTerminateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTerminateActionPerformed
        // TODO add your handling code here:
        int mc = JOptionPane.INFORMATION_MESSAGE;
        int iTerminate = JOptionPane.showConfirmDialog(null, "WANT TO TERMINATE??", "OWNER COMMAND",JOptionPane.YES_NO_OPTION     , mc);
        if(iTerminate==JOptionPane.YES_OPTION)
        {
            System.out.println("TERMINATE ROOM : "+ this.Name +" WITH ROOM ID:  " + this.IDROOM);
            GlobalStatic.clientThread.TerminateRoom(this.IDROOM);
        }
        else
        {
            System.out.println("CANCEL TERMINATE IN ROOM : "+ this.Name +" WITH ROOM ID:  " + this.IDROOM);
        }
    }//GEN-LAST:event_btnTerminateActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        GlobalStatic.clientThread.ReFreshROOMGUI(this.IDROOM);
        System.err.println("REQUEST SERVER TO RECEIVED A LIST ON ROOM ID "+this.IDROOM);
    }//GEN-LAST:event_btnRefreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddUser;
    private javax.swing.JButton btnKickUser;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnTerminate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbHostName;
    private javax.swing.JLabel lbRoomName;
    private javax.swing.JList<String> listUser;
    private javax.swing.JTextField txtChat;
    private javax.swing.JTextArea txtContent;
    // End of variables declaration//GEN-END:variables
}
