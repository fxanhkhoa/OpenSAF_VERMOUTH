/*
 
*Function : RoomGUI
*Description: Room Interfaces. Private Chat, Kick or Add User.
*Argument: Nope!
*Return: Nope!
Note: Comment!

 */
package chatclient;

 
import java.awt.event.KeyEvent;
 
import javax.swing.*;
import java.util.*;

/**
 *
 * @author hieupham
 */




public class RoomGUI extends javax.swing.JFrame {

    /**
     * Creates new form RoomGUI
     */
    
     /**
     * Variable
     */
    
    /*CORE*/
    Client _Client;
    
    /**/
    private DefaultListModel listModel;
    Thread waitThr;
    private String sUser;
     
    Global g = Global.getInstance();
    private boolean checkUser=true;
    SavedPreference sP;
    
    public int IDROOM;
    public String Name;
    public int status;
    public int isOwner = 0;
        
    public HashSet<UserStruct> userRoomList = new HashSet<UserStruct>();
     /**
     * End line
     */
    public RoomGUI(String Name, int IDROOM, int status ) {
        initComponents();
        
        /*CORE*/
        _Client = Client.getInstance();
        sP = SavedPreference.getInstance();
    
        this.IDROOM = IDROOM;
        this.Name = Name;
        this.status=status;
        /**/
        btnAddUser.setEnabled(false);
        btnKickUser.setEnabled(false);
        btnTerminate.setEnabled(false);
        
         /**/
        listUser.setModel(new DefaultListModel());
        listModel = new DefaultListModel();
        lbRoomName.setText(Name);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pmRightClick = new javax.swing.JPopupMenu();
        jmiKick = new javax.swing.JMenuItem();
        jmiExit = new javax.swing.JMenuItem();
        lbRoomName = new javax.swing.JLabel();
        lbHostName = new javax.swing.JLabel();
        btnAddUser = new javax.swing.JButton();
        btnKickUser = new javax.swing.JButton();
        txtChat = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listUser = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtContent = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        btnTerminate = new javax.swing.JButton();

        pmRightClick.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pmRightClickMousePressed(evt);
            }
        });

        jmiKick.setText("Kick");
        jmiKick.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiKickActionPerformed(evt);
            }
        });
        pmRightClick.add(jmiKick);

        jmiExit.setText("Exit");
        jmiExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiExitActionPerformed(evt);
            }
        });
        pmRightClick.add(jmiExit);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });

        lbRoomName.setText("ROOM");

        lbHostName.setText("HOST");

        btnAddUser.setText("AddUser");
        btnAddUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddUserActionPerformed(evt);
            }
        });

        btnKickUser.setText("KickUser");
        btnKickUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKickUserActionPerformed(evt);
            }
        });

        txtChat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtChatActionPerformed(evt);
            }
        });
        txtChat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtChatKeyPressed(evt);
            }
        });

        jLabel1.setText("List");

        jScrollPane2.setViewportView(listUser);

        txtContent.setColumns(20);
        txtContent.setRows(5);
        jScrollPane1.setViewportView(txtContent);

        jLabel3.setText("ROOM ID");

        btnTerminate.setText("Terminate");
        btnTerminate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTerminateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbHostName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel3)))
                        .addGap(58, 58, 58)
                        .addComponent(lbRoomName, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(305, 305, 305))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAddUser)
                                .addGap(35, 35, 35)
                                .addComponent(btnTerminate))
                            .addComponent(btnKickUser)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(115, 115, 115)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 689, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(387, Short.MAX_VALUE)
                .addComponent(txtChat, javax.swing.GroupLayout.PREFERRED_SIZE, 689, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbHostName)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbRoomName, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel3)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAddUser)
                            .addComponent(btnTerminate))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnKickUser)
                        .addGap(16, 16, 16)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(txtChat, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    protected void AddChatMess(String User, String Mess){
        if (!sP.GetUserName().equals(User)){
            txtContent.append(User + ": " + Mess + "\n");
        }
    }
    
    protected void SetButton()
    {
        if(isOwner==0)
        {
            try {
                btnAddUser.setEnabled(false);
                btnKickUser.setEnabled(false);
                btnTerminate.setEnabled(false);
                
            } catch (Exception e) {
            }
        }
        else
        {
            try {
                btnAddUser.setEnabled(true);
                btnKickUser.setEnabled(true);
                btnTerminate.setEnabled(true);
                
            } catch (Exception e) {
            }
        }
    }
    
    private void ReloadList(){
        listModel.removeAllElements();
        for (UserStruct uS: userRoomList){
            try {
                System.out.println("i day:" + uS.userName);
                //System.err.println(sP.onlineUser.elementAt(k).userName);
                listModel.addElement(uS);
                
            } catch (Exception e) {
            }
             
        
            if(true)
            {
                listUser.setModel(listModel);
            }
                            
        //Now render Jlist
        listUser.setCellRenderer(new OnlineUserRenderer());
        }
    }
    
    protected int AddToList(String userName){

        for (UserStruct uS: userRoomList){
            if (uS.userName.equals(userName)){
                return 1;
            }
        }
        userRoomList.add(new UserStruct(userName, 1));
        ReloadList();
        return 1;
    }
    
    protected int RemoveFromList(String userName){
        for (UserStruct uS: userRoomList){
            if (uS.userName.equals(userName)){
                userRoomList.remove(uS);
                ReloadList();
                return 1;
            }
        }
        
        return 1;
    }
    
    public void ReloadListFriendOnRoom(int status){

    }
    
    private void btnAddUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddUserActionPerformed
        // TODO add your handling code here:      
      
        int mc = JOptionPane.INFORMATION_MESSAGE;
	sUser = JOptionPane.showInputDialog (null, "Type User", "Add USer to Private Chat", mc);
        //System.out.println(sUser);
        
        //int IDROOM =0;
        //IDROOM=_Client.sP.GetIDROOM(lbRoomName.getText());
        
        _Client.AddFriendToRoom(this.IDROOM,sUser); //sUser
        System.err.println("INVITED MR/MRS  "+sUser+ "INTO ROOM ID "+ IDROOM);
        
    }//GEN-LAST:event_btnAddUserActionPerformed

    private void txtChatKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtChatKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            
                
//                IDROOM=lbRoomName.getText();
            //int IDROOM =0;
            //IDROOM=_Client.sP.GetIDROOM(lbRoomName.getText());
            System.out.println("ID KHI SEND: " + this.IDROOM);
            txtContent.append(txtChat.getText() + "\n");
            _Client.SendMsgToRoom(this.IDROOM,txtChat.getText());
            txtChat.setText("");
            
//            else{
//                int mcServer = JOptionPane.ERROR_MESSAGE;
//                JOptionPane.showMessageDialog (null, "Room empty!!!", "Warning", mcServer);
//            }
//            txtChat.setText("");
        }
        
    }//GEN-LAST:event_txtChatKeyPressed

    private void btnKickUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKickUserActionPerformed
        // TODO add your handling code here:
        int mc = JOptionPane.INFORMATION_MESSAGE;
	sUser = JOptionPane.showInputDialog (null, "Type User", "Kick User ", mc);
        System.out.println("IDROOM WHEN KICK:" + this.IDROOM);
        //int IDROOM =0;
        //IDROOM=_Client.sP.GetIDROOM(lbRoomName.getText());
        _Client.RemoveFriendFromRoom(sUser, IDROOM, "");
        
    }//GEN-LAST:event_btnKickUserActionPerformed

    private void pmRightClickMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pmRightClickMousePressed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_pmRightClickMousePressed

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed

        // TODO add your handling code here:
        if(evt.isPopupTrigger())
        {
            pmRightClick.show(this, evt.getX(), evt.getY());
        }
        
    }//GEN-LAST:event_formMousePressed

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        // TODO add your handling code here:
          
    }//GEN-LAST:event_formMouseReleased

    private void jmiExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiExitActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jmiExitActionPerformed

    private void jmiKickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiKickActionPerformed
        // TODO add your handling code here:
        int mc = JOptionPane.INFORMATION_MESSAGE;
	sUser = JOptionPane.showInputDialog (null, "Type User", "Kick User ", mc);
        System.out.println("ROOM ID OF KICK: " + this.IDROOM);
        _Client.RemoveFriendFromRoom(sUser, this.IDROOM, "");
        System.out.println("KICK!!!!!");
    }//GEN-LAST:event_jmiKickActionPerformed

    private void txtChatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtChatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtChatActionPerformed

    private void btnTerminateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTerminateActionPerformed
        // TODO add your handling code here:
        int mc = JOptionPane.INFORMATION_MESSAGE;
	int iTerminate = JOptionPane.showConfirmDialog(null, "Type User", "Kick User ",JOptionPane.YES_NO_OPTION     , mc);
        if(iTerminate==JOptionPane.YES_OPTION)
        {
            System.out.println("TERMINATE ROOM : "+ this.Name +" WITH ROOM ID:  " + this.IDROOM);
            _Client.TerminateRoom(IDROOM);
        }
        else
        {
            System.out.println("CANCEL TERMINATE IN ROOM : "+ this.Name +" WITH ROOM ID:  " + this.IDROOM);
        }
    }//GEN-LAST:event_btnTerminateActionPerformed
     /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RoomGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RoomGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RoomGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RoomGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RoomGUI("",0,1).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddUser;
    private javax.swing.JButton btnKickUser;
    private javax.swing.JButton btnTerminate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuItem jmiExit;
    private javax.swing.JMenuItem jmiKick;
    private javax.swing.JLabel lbHostName;
    private javax.swing.JLabel lbRoomName;
    private javax.swing.JList<String> listUser;
    private javax.swing.JPopupMenu pmRightClick;
    private javax.swing.JTextField txtChat;
    private javax.swing.JTextArea txtContent;
    // End of variables declaration//GEN-END:variables

}
